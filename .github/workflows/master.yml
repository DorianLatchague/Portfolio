on:
  push:
    branches: 
      - master

name: Deploy to Amazon Elastic Beanstalk

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Read Dockerrun.aws.json
      id: read-file
      uses: juliangruber/read-file-action@v1
      with:
        path: './Dockerrun.aws.json'

    - name: Echo Dockerrun.aws.json
      run: |
        # Providing Dockerrun.aws.json
        echo "${{ steps.read-file.outputs.content }}"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      run: |
        # Build a docker container and
        # push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
        
    - name: Deploy to EB
      uses: DorianLatchague/beanstalk-deploy@3.3
      with: 
        dockerrun_json: ${{ steps.read-file.outputs.content }}
        ecr_registry: ${{ steps.login-ecr.outputs.registry }}
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.EB_APPLICATION_NAME }}
        environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
        version_label: latest
        region: ${{ secrets.AWS_REGION }}
        wait_for_environment_recovery: 300